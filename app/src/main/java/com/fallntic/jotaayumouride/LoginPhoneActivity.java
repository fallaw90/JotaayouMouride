package com.fallntic.jotaayumouride;import android.content.Intent;import android.content.pm.ActivityInfo;import android.os.Bundle;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.view.WindowManager;import android.widget.EditText;import android.widget.TextView;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import static com.fallntic.jotaayumouride.CreateDahiraActivity.getCurrentCountryCode;import static com.fallntic.jotaayumouride.Utility.DataHolder.checkPrefix;public class LoginPhoneActivity extends AppCompatActivity implements View.OnClickListener {    private EditText editTextMobile;    private TextView textViewAreaCode;    private String areaCode;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_login_phone);        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);        Toolbar toolbar = findViewById(R.id.toolbar);        toolbar.setLogo(R.mipmap.logo);        setSupportActionBar(toolbar);        editTextMobile = findViewById(R.id.editTextMobile);        textViewAreaCode = findViewById(R.id.textView_areaCode);        areaCode = getCurrentCountryCode(this);        textViewAreaCode.setText(areaCode);        findViewById(R.id.buttonContinue).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String mobile = editTextMobile.getText().toString().trim();                if (mobile.isEmpty()) {                    editTextMobile.setError("Numero telephone incorrect");                    editTextMobile.requestFocus();                    return;                }                else if (mobile.contains(areaCode)) {                    editTextMobile.setError("Ne pas inclure l'indicatif svp.");                    editTextMobile.requestFocus();                    return;                }                mobile = areaCode.concat(mobile);                Intent intent = new Intent(LoginPhoneActivity.this, VerifyPhoneActivity.class);                intent.putExtra("mobile", mobile);                startActivity(intent);            }        });        hideSoftKeyboard();        findViewById(R.id.textView_signUpEmail).setOnClickListener(this);    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.textView_signUpEmail:                finish();                startActivity(new Intent(this, LoginActivity.class));                break;        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        MenuInflater inflater = getMenuInflater();        inflater.inflate(R.menu.main_menu, menu);        MenuItem iconBack;        iconBack = menu.findItem(R.id.icon_back);        iconBack.setVisible(true);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()) {            case R.id.icon_back:                finish();                startActivity(new Intent(this, HomeActivity.class));                break;            case R.id.instructions:                startActivity(new Intent(this, InstructionsActivity.class));                break;        }        return true;    }    public void hideSoftKeyboard(){        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);    }}